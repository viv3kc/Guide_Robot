shutdown_costmaps: false # Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state

controller_frequency: 5.0 # The rate in Hz at which to run the control loop and send velocity commands to the base.
controller_patience: 5.0 # How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.

planner_frequency: 1 # The rate in Hz at which to run the global planning loop. If the frequency is set to 0.0, the global planner will only run when a new goal is received or the local planner reports that its path is blocked.
planner_patience: 5.0 # How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.

oscillation_timeout: 0.0 # How long in seconds to allow for oscillation before executing recovery behaviors. A value of 0.0 corresponds to an infinite timeout.
oscillation_distance: 0.5 # How far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to the ~oscillation_timeout

# local planner - default is trajectory rollout
base_local_planner: "base_local_planner/TrajectoryPlannerROS"
#base_local_planner: "teb_local_planner/TebLocalPlannerROS"

base_global_planner: "asr_navfn/NavfnROS" #alternatives: navfn/NavfnROS, carrot_planner/CarrotPlanner, global_planner/GlobalPlanner

conservative_reset_dist: 3.0 # The distance away from the robot in meters at which obstacles will be cleared from the costmap when attempting to clear space in the map.

recovery_behavior_enabled: true # Whether or not to enable the move_base recovery behaviors to attempt to clear out space.

max_planning_retries: -1 # How many times to allow for planning retries before executing recovery behaviors. A value of -1.0 corresponds to an infinite retries.

clearing_rotation_allowed: true # Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space.